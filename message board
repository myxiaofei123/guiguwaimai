<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>Vue---留言板</title>
		<!-- Bootstrap CSS -->
	    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
	    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
	    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
		<script type="text/javascript" src="js/vue.js" ></script>
	</head>
	<body>
		<div id="app">
			<div class="container-fluid">
			<span style="cursor: pointer;"  @click="Show">{{msg}}</span>
			<span>{{reMsg}}</span>
			<form>
			  <div class="form-group">
			    <label for="exampleInputEmail1" v-if="isShow">留言者</label>
			    <input type="text" class="form-control" id="exampleInputEmail1" placeholder="姓名" v-model="name">
			  </div>
			  <div class="form-group">
			    <label for="exampleInputPassword1">评论内容</label>
			    <textarea type="text" class="form-control" id="exampleInputPassword1" placeholder="请输入评论内容" style="height: 200px;"  v-model="content"></textarea>
			 </div>
 
  			<button type="button" class="btn btn-success" @click="addItem">提交留言</button>
 
			</form>
			<!--列表-->
			
				<ul class="list-group" style="margin-top: 40px;">
					
				  <li class="list-group-item" v-for="item in newArr" :key="item.id">
				  	<button type="button" class="btn btn-success" @click="deleteItem()">删除</button><span style="margin-left: 40px;">{{item.content}}</span><span style="float: right;">{{item.name}}</span>
				  </li>
				 
				</ul>
			</div>
		</div>
		<script>
			var vm=new Vue({
				el:'#app',
				data(){
					return{
						
					msg:'我是彭飞',
					name:'',
					content:'',
					
					newArr:[],
					isShow:false
						
					
				
					}
				},
				computed:{
					reMsg:function(){
						return this.msg.split('').reverse().join('')
					}
				},
				mounted(){
					
					
				},
				methods:{
					addItem(){
//						const {name,content,obj,newArr} = this
//						this.obj.name=this.name
//						this.obj.content=this.content
//					    this.newArr.push(this.obj)
						//把数组存放在本地存储中
						if(this.content!=='' && this.name!==''){
							const obj={
								name:this.name,
								content:this.content
							}
						 	this.newArr.push(obj)
							
						    
						}
						
						
					},
					Show(){
						this.isShow=!this.isShow
					
					},
					deleteItem(index){
						//判断当前删除按钮的索引
						this.newArr.splice(index,1)
					}
				}
			})
		</script>
		 <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
	</body>
</html>
